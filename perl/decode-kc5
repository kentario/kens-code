#!/usr/bin/perl -w
#	-*- Perl -*-		test:	
#
#	(usage)% test
#
#	Inputs:		
#			
#	Outputs:		
#
#	Kentaro Wuertele	Sat Aug 17 10:35:09 2019	Steal This Program!!!

use strict;

my %index_of_letter = (
    a => 0,
    b => 1,
    c => 2,
    d => 3,
    e => 4,
    f => 5,
    g => 6,
    h => 7,
    i => 8,
    j => 9,
    k => 10,
    l => 11,
    m => 12,
    n => 13,
    o => 14,
    p => 15,
    q => 16,
    r => 17,
    s => 18,
    t => 19,
    u => 20,
    v => 21,
    w => 22,
    x => 23,
    y => 24,
    z => 25,
    1 => 26,
    2 => 27,
    3 => 28,
    4 => 29,
    5 => 30,
    6 => 31,
    7 => 32,
    8 => 33,
    9 => 34,
    0 => 35,
    ' ' => 36,
    '.' => 37,
    ',' => 38,
    '!' => 39,
    '?' => 40,
    '-' => 41,
    '+' => 42,
    '=' => 43,
    '(' => 44,
    ')' => 45,
    ':' => 46,
    );

my %letter_of_index;

my @characters = keys %index_of_letter;
foreach my $letter (@characters) {
    $letter_of_index{$index_of_letter{$letter}} = $letter;
}

my $ciphertext = shift;
my @groups = split (/ /, $ciphertext);

foreach my $group (@groups) {
    decode_group($group);
}

sub decode_group {
    my $group = shift;
#    print "$group\n";
    my ($offset, $direction, $newletter) = split (/_/, $group);
#    print "offset = $offset \ndirection = $direction \nnewletter = $newletter\n";
    my $index = $index_of_letter{$newletter};
#    print "index = $index\n";
    if ($direction == 1) {
	$index = $index - $offset;
    } else {
	$index = $index + $offset;
    }
#    print "offset index = $index\n";
    my $wrapped_index = $index % ($#characters + 1);
#    print "wrapped_index = $wrapped_index\n";
    my $decoded_letter = $letter_of_index{$wrapped_index};
#    print "decoded_letter = $decoded_letter\n";
    print $decoded_letter;
}

print "\n";
